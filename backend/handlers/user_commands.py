from aiogram import Router, types, F
from aiogram.filters import Command
from sqlalchemy.ext.asyncio import AsyncSession
from database.requests import get_user_subscriptions
from aiogram.utils.keyboard import InlineKeyboardBuilder, ReplyKeyboardBuilder

router = Router()

def get_main_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∫–∞–∂–¥—ã–π —Ä–∞–∑ –∑–∞–Ω–æ–≤–æ"""
    builder = ReplyKeyboardBuilder()
    builder.button(text="üìú –ú–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏")
    builder.button(text="‚ÑπÔ∏è –ü–æ–º–æ—â—å")
    builder.adjust(1)
    return builder.as_markup(resize_keyboard=True, input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ...")

@router.message(Command("start"))
async def cmd_start(message: types.Message):
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! –ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –∫–∞–Ω–∞–ª –≤ –ª–µ–Ω—Ç—É, –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ—à–ª–∏ –º–Ω–µ –ª—é–±–æ–π –ø–æ—Å—Ç –∏–∑ –Ω–µ–≥–æ. üöÄ\n\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π –º–µ–Ω—é –Ω–∏–∂–µ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏.",
        reply_markup=get_main_keyboard()
    )

@router.message(F.text == "‚ÑπÔ∏è –ü–æ–º–æ—â—å")
async def cmd_help(message: types.Message):
    web_app_url = "https://frontend-app-production-c1ed.up.railway.app"
    
    builder = InlineKeyboardBuilder()
    builder.button(text="üì± –û—Ç–∫—Ä—ã—Ç—å –ª–µ–Ω—Ç—É", web_app=types.WebAppInfo(url=web_app_url))
    
    await message.answer(
        "–≠—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–µ—Ç –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é –ª–µ–Ω—Ç—É –∏–∑ Telegram-–∫–∞–Ω–∞–ª–æ–≤.\n\n"
        "**–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:**\n"
        "1. **–î–æ–±–∞–≤–∏—Ç—å –∫–∞–Ω–∞–ª:** –ü–µ—Ä–µ—à–ª–∏—Ç–µ –≤ –±–æ—Ç –ª—é–±–æ–π –ø–æ—Å—Ç –∏–∑ –ø—É–±–ª–∏—á–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞.\n"
        "2. **–ü—Ä–æ—Å–º–æ—Ç—Ä –ø–æ–¥–ø–∏—Å–æ–∫:** –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É 'üìú –ú–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏' –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /subscriptions.\n"
        "3. **–ß–∏—Ç–∞—Ç—å –ª–µ–Ω—Ç—É:** –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É '–û—Ç–∫—Ä—ã—Ç—å –ª–µ–Ω—Ç—É' —Å–ª–µ–≤–∞",
        reply_markup=builder.as_markup(),
        parse_mode="Markdown"
    )

@router.message((Command("subscriptions")) | (F.text == "üìú –ú–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏"))
async def cmd_subscriptions(message: types.Message, session: AsyncSession):
    if not message.from_user:
        await message.answer("–ù–µ –º–æ–≥—É –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å.")
        return

    subscriptions = await get_user_subscriptions(session, message.from_user.id)

    if not subscriptions:
        await message.answer("–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫. \n\n–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –∫–∞–Ω–∞–ª, –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ—à–ª–∏—Ç–µ –º–Ω–µ –ø–æ—Å—Ç –∏–∑ –Ω–µ–≥–æ.")
        return

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º HTML-—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –≤—Å–µ–≥–æ —Ç–µ–∫—Å—Ç–∞
    response_text = "‚ú® <b>–í–∞—à–∏ –ø–æ–¥–ø–∏—Å–∫–∏:</b>\n\n"
    builder = InlineKeyboardBuilder()

    for i, channel in enumerate(subscriptions, 1):
        if channel.username:
            response_text += f"{i}. <a href='https://t.me/{channel.username}'>{channel.title}</a>\n"
        else:
            response_text += f"{i}. {channel.title}\n"
        
        builder.button(
            text=f"‚ùå –û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç ¬´{channel.title}¬ª", 
            callback_data=f"unsub:{channel.id}"
        )

    builder.adjust(1) 

    await message.answer(
        response_text,
        reply_markup=builder.as_markup(),
        parse_mode="HTML",
        disable_web_page_preview=True
    )