from aiogram import Router, types
from aiogram.filters import Command
from sqlalchemy.ext.asyncio import AsyncSession
from database.requests import get_user_subscriptions
from aiogram.utils.keyboard import InlineKeyboardBuilder

router = Router()

@router.message(Command("start"))
async def cmd_start(message: types.Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –∫–∞–Ω–∞–ª –≤ –ª–µ–Ω—Ç—É, –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ—à–ª–∏ –º–Ω–µ –ª—é–±–æ–π –ø–æ—Å—Ç –∏–∑ –Ω–µ–≥–æ. üöÄ")

# –ù–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /subscriptions
@router.message(Command("subscriptions"))
async def cmd_subscriptions(message: types.Message, session: AsyncSession):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–ø–∏—Å–æ–∫ –µ–≥–æ –ø–æ–¥–ø–∏—Å–æ–∫
    –° –ö–õ–ò–ö–ê–ë–ï–õ–¨–ù–´–ú–ò –°–°–´–õ–ö–ê–ú–ò –∏ –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –æ—Ç–ø–∏—Å–∫–∏.
    """
    if not message.from_user:
        await message.answer("–ù–µ –º–æ–≥—É –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å.")
        return

    subscriptions = await get_user_subscriptions(session, message.from_user.id)

    if not subscriptions:
        await message.answer("–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫. \n\n–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –∫–∞–Ω–∞–ª, –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ—à–ª–∏—Ç–µ –º–Ω–µ –ø–æ—Å—Ç –∏–∑ –Ω–µ–≥–æ.")
        return

    # --- –û–ë–ù–û–í–õ–ï–ù–ù–ê–Ø –õ–û–ì–ò–ö–ê ---
    # 1. –ì–æ—Ç–æ–≤–∏–º –∏ —Ç–µ–∫—Å—Ç, –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ
    response_text = "‚ú® **–í–∞—à–∏ –ø–æ–¥–ø–∏—Å–∫–∏:**\n\n"
    builder = InlineKeyboardBuilder()

    for i, channel in enumerate(subscriptions, 1):
        # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ—á–∫—É —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –∫–∞–Ω–∞–ª–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç.
        # –ï—Å–ª–∏ –µ—Å—Ç—å —é–∑–µ—Ä–Ω–µ–π–º - –¥–µ–ª–∞–µ–º –µ–≥–æ —Å—Å—ã–ª–∫–æ–π.
        if channel.username:
            response_text += f"{i}. <a href='https://t.me/{channel.username}'>{channel.title}</a>\n"
        else:
            response_text += f"{i}. {channel.title}\n"
        
        # –î–ª—è –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ—á–∫–∏ –¥–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É
        builder.button(
            text=f"‚ùå –û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç ¬´{channel.title}¬ª", 
            callback_data=f"unsub:{channel.id}"
        )

    # –í—ã—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –æ–¥–∏–Ω —Å—Ç–æ–ª–±–µ—Ü
    builder.adjust(1) 

    # 2. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º, –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –∏ –Ω—É–∂–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
    await message.answer(
        response_text,
        reply_markup=builder.as_markup(),
        parse_mode="HTML", # <-- –í–∞–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å, —á—Ç–æ–±—ã —Å—Å—ã–ª–∫–∏ —Ä–∞–±–æ—Ç–∞–ª–∏
        disable_web_page_preview=True # <-- –ü–æ–ª–µ–∑–Ω–æ, —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ –ø—Ä–µ–≤—å—é —Å–∞–π—Ç–æ–≤
    )