from aiogram import Router, types, F
from sqlalchemy.ext.asyncio import AsyncSession
from database.requests import add_subscription
from worker import fetch_posts_for_channel, upload_avatar_to_s3, client 
from telethon.tl.types import InputPeerChannel 

router = Router()

@router.message(F.forward_from_chat)
async def handle_forwarded_message(message: types.Message, session: AsyncSession):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –¥–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–¥–ø–∏—Å–∫—É –∏ –°–†–ê–ó–£ –ñ–ï
    –∑–∞–ø—É—Å–∫–∞–µ—Ç —Å–±–æ—Ä –ø–æ—Å—Ç–æ–≤ –¥–ª—è —ç—Ç–æ–≥–æ –∫–∞–Ω–∞–ª–∞.
    """
    if not message.forward_from_chat or message.forward_from_chat.type != 'channel':
        await message.reply("–≠—Ç–æ –Ω–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ –∫–∞–Ω–∞–ª. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ—à–ª–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –ø—É–±–ª–∏—á–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞.")
        return

    if not message.from_user:
        await message.reply("–ù–µ –º–æ–≥—É –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å, –∫—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞.")
        return

    user = message.from_user
    channel_forward = message.forward_from_chat

    # --- –ò–ó–ú–ï–ù–ï–ù–û: –õ–æ–≥–∏–∫–∞ –≤—ã–∑–æ–≤–∞ ---
    # 1. –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏
    response_message, new_channel_obj = await add_subscription(
        session=session,
        user_id=user.id,
        user_fn=user.first_name,
        user_un=user.username or "",
        channel_id=channel_forward.id,
        channel_title=channel_forward.title or "",
        channel_un=channel_forward.username or ""
    )
    
    # 2. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
    await message.answer(response_message)

    # 3. –ï—Å–ª–∏ –±—ã–ª —Å–æ–∑–¥–∞–Ω –ù–û–í–´–ô –∫–∞–Ω–∞–ª (–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ —Å—Ç–∞—Ä–∞—è –ø–æ–¥–ø–∏—Å–∫–∞),
    #    —Ç–æ –∑–∞–ø—É—Å–∫–∞–µ–º –¥–ª—è –Ω–µ–≥–æ —Å–±–æ—Ä –ø–æ—Å—Ç–æ–≤.
    if new_channel_obj:
        # –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –∫–ª–∏–µ–Ω—Ç Telethon –ø–æ–¥–∫–ª—é—á–µ–Ω, –ø—Ä–µ–∂–¥–µ —á–µ–º –µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å
        if not client.is_connected():
            await client.connect()
        
        # 1. –ü–æ–ª—É—á–∞–µ–º entity –∫–∞–Ω–∞–ª–∞ —á–µ—Ä–µ–∑ Telethon
        channel_entity = await client.get_entity(new_channel_obj.id)
        
        # 2. –°–∫–∞—á–∏–≤–∞–µ–º –∏ –∑–∞–≥—Ä—É–∂–∞–µ–º –∞–≤–∞—Ç–∞—Ä, –ø–æ–ª—É—á–∞–µ–º URL
        avatar_url = await upload_avatar_to_s3(channel_entity)
        
        # 3. –°–æ—Ö—Ä–∞–Ω—è–µ–º URL –≤ –Ω–∞—à –æ–±—ä–µ–∫—Ç –∏ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        if avatar_url:
            new_channel_obj.avatar_url = avatar_url
            session.add(new_channel_obj)
            await session.commit()

        # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Å–±–æ—Ä–∞ –ø–æ—Å—Ç–æ–≤ –¥–ª—è —Å–≤–µ–∂–µ–¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞
        await fetch_posts_for_channel(channel=new_channel_obj, db_session=session, post_limit=20) # –ú–æ–∂–Ω–æ –ø–æ—Å—Ç–∞–≤–∏—Ç—å –ª–∏–º–∏—Ç –ø–æ–±–æ–ª—å—à–µ –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ —Ä–∞–∑–∞
        
        await message.answer(f"üëç –ì–æ—Ç–æ–≤–æ! –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ø–æ—Å—Ç—ã –∏–∑ ¬´{new_channel_obj.title}¬ª –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –≤–∞—à—É –ª–µ–Ω—Ç—É.")